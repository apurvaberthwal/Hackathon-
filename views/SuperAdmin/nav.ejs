<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home Page with Navbar and Report List</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
        }

        nav {
            background: linear-gradient(to right, #141313, #3a3a3a);
            padding: 10px 20px;
            height: 40px;
            position: relative;
        }

        nav a {
            float: left;
            display: block;
            color: #f2f2f2;
            text-align: center;
            padding: 14px 20px;
            text-decoration: none;
            transition: background-color 0.3s, color 0.3s;
            position: relative;
        }

        nav a:hover {
            background-color: #ddd;
            color: black;
        }

        .dropdown {
            float: left;
            overflow: hidden;
        }

        .dropdown .dropbtn {
            font-size: 16px;
            border: none;
            outline: none;
            color: white;
            padding: 14px 20px;
            background-color: inherit;
            font-family: inherit;
            margin: 0;
        }

        .dropdown-content {
            display: none;
            position: absolute;
            background-color: #f9f9f9;
            min-width: 160px;
            box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
            z-index: 1;
        }

        .dropdown-content a {
            float: none;
            color: black;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
            text-align: left;
        }

        .dropdown-content a:hover {
            background-color: #ddd;
        }

        .dropdown:hover .dropdown-content {
            display: block;
        }

       
        nav .right {
            float: right;
        }

        nav .profile {
            float: right;
            display: flex;
            align-items: center;
            position: relative;
            margin: 0 20px;
        }

        nav .profile img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 8px;
            vertical-align: middle;
            cursor: pointer;
            transition: transform 0.3s;
        }

        nav .profile img:hover {
            transform: scale(1.1);
        }

        .profile-dropdown-content {
            top: 40%;
            display: none;
            position: absolute;
            right: 0;
            background-color: #f9f9f9;
            min-width: 160px;
            box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
            z-index: 1;
            border-radius: 5px;
        }

        .profile-dropdown-content a {
            color: black;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
        }

        .profile:hover .profile-dropdown-content {
            display: block;
        }

        .test {
            display: flex;
            flex-direction: column;
        }
        .badge {
            background-color: red;
            color: white;
            padding: 2px 8px;
            border-radius: 50%;
            font-size: 12px;
            margin-left: 8px;
            position: absolute;
            top: 8px;
            right: 10px;
        }

        .approval-tab {
            position: relative;
        }

        .approval-tab .badge {
            top: -2px;
            right: -10px;
        }
    </style>
</head>

<body>
    <nav>
        <a href="#">SuperAdmin Portal</a>
        <a href="/SuperAdmin/dashboard">Dashboard</a>
        <div class="dropdown">
            <button class="dropbtn">Institute
                <i class="fa fa-caret-down"></i>
            </button>
            <div class="dropdown-content">
                <a href="/superAdmin/createInstitute">Add Institute</a>
                <a href="/superAdmin/createDepartment">Add Department</a>
                <a href="/superAdmin/manageInstitute">Manage Institute</a>
            </div>
        </div>
        <div class="dropdown">
            <button class="dropbtn">Employee
                <i class="fa fa-caret-down"></i>
            </button>
            <div class="dropdown-content">
                <a href="/committee">Committee</a>
                <a href="/faculty">Faculty</a>
            </div>
        </div>

        <!-- Approval Tab with Badge for Pending Requests -->
       <!-- nav.ejs -->
<a href="/superAdmin/approvals" class="approval-tab">
    Approval
    <span class="badge" id="pendingRequestsBadge" style="display: none;"></span>
</a>


<div class="profile" id="profile">
    <img src="/images/images.jpeg" alt="Profile Picture">
    <div class="profile-dropdown-content" id="profile-dropdown-content">
        <div class="test">
            <a href="/Faculty/profile">Profile</a>
            <a href="/Faculty/Update">Update</a>
            <a href="/Faculty/logout">Logout</a>
        </div>
    </div>
</div>
    </nav>

    <script>
        window.onload = function() {
            function updatePendingRequests() {
                fetch('/superadmin/pending-requests')
                    .then(response => response.json())
                    .then(data => {
                        console.log('Fetched pending requests:', data); // Debugging line
    
                        const approvalTab = document.querySelector('.approval-tab');
                        let badge = approvalTab.querySelector('.badge');
    
                        if (data.pendingRequests > 0) {
                            if (!badge) {
                                badge = document.createElement('span');
                                badge.className = 'badge';
                                approvalTab.appendChild(badge);
                            }
                            badge.textContent = data.pendingRequests;
                            badge.style.display = 'inline'; // Ensure badge is visible
                        } else if (badge) {
                            badge.style.display = 'none'; // Hide badge if no pending requests
                        }
                    })
                    .catch(error => console.error('Error fetching pending requests:', error));
            }
    
            // Update pending requests on page load
            updatePendingRequests();
    
            // Optionally, set up an interval to periodically update the count
            setInterval(updatePendingRequests, 10000); // Update every 10 seconds
        };
    </script>
    
</body>

</html>
