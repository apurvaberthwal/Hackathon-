<!DOCTYPE html>
<html lang="en">
    <%- include("nav") %>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Appraisal Cycle Table</title>
    <style> body {
        background: linear-gradient(120deg, #3a7bd5 0%, #3a6073 100%);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        margin: 0;
        padding: 0;
        color: #f0f0f0;
    }

    .container {
        width: 90%;
        margin: 20px auto;
        padding: 30px;
        background-color: rgba(255, 255, 255, 0.05);
        border-radius: 12px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
    }

    h2 {
        font-size: 28px;
        text-align: center;
        margin-bottom: 20px;
        color: #f2f2f2;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 20px;
        background-color: rgba(255, 255, 255, 0.05);
    }

    th, td {
        padding: 15px;
        text-align: left;
        border: 1px solid #ddd;
        color: #f0f0f0;
        font-size: 16px;
    }

    th {
        background-color: #3498db;
        color: #fff;
    }

    tbody tr:nth-child(even) {
        background-color: rgba(255, 255, 255, 0.1);
    }

    tbody tr:hover {
        background-color: rgba(255, 255, 255, 0.2);
    }

    .button-container {
        display: flex;
        justify-content: center;
        margin-top: 20px;
        position: relative;
    }

    .add-button {
        background-color: #2ecc71;
        color: white;
        padding: 10px;
        border: none;
        border-radius: 50%;
        cursor: pointer;
        font-size: 20px;
        width: 40px;
        height: 40px;
        line-height: 0;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        position: absolute;
        bottom: 0;
        right: 0;
    }

    .add-button:hover {
        background-color: #27ae60;
    }

    button {
        background-color: #00ca11;
        color: white;
        border: none;
        padding: 12px 20px;
        border-radius: 6px;
        cursor: pointer;
        font-size: 16px;
        transition: background-color 0.3s ease;
    }

    button:hover {
        background-color: #5eff50;
    }

    /* Modal Styling */
    .modal {
        display: none; 
        position: fixed;
        z-index: 1;
        padding-top: 100px;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.7);
    }

    .modal-content {
        background-color: #2c3e50;
        margin: auto;
        padding: 20px;
        border-radius: 12px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
        width: 20%;
        color: #f0f0f0;
    }

    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
        transition: color 0.3s ease;
    }

    .close:hover,
    .close:focus {
        color: #fff;
        text-decoration: none;
        cursor: pointer;
    }

    .modal h2 {
        color: #f2f2f2;
        font-size: 24px;
        margin-bottom: 15px;
        text-align: center;
    }

    .modal label {
        display: block;
        margin: 15px 0 5px;
        font-size: 16px;
        color: #f0f0f0;
    }

    .modal input[type="text"], 
    .modal input[type="number"] {
        width: 250px;
        padding: 12px;
        margin: 8px 0;
        background-color: rgba(255, 255, 255, 0.1);
        border: 1px solid #ccc;
        border-radius: 8px;
        color: #f0f0f0;
    }

    .modal input[type="text"]:focus, 
    .modal input[type="number"]:focus {
        border-color: #3498db;
        outline: none;
    }

    .modal button {
        background-color: #2ecc71;
        color: white;
        padding: 12px 20px;
        margin-top: 20px;
        border: none;
        border-radius: 6px;
        cursor: pointer;
        font-size: 16px;
        width: 100%;
        transition: background-color 0.3s ease;
    }

    .modal button:hover {
        background-color: #27ae60;
    }

    /* Notification Styling */
    .notification {
        display: none;
        background-color: rgba(0, 0, 0, 0.7);
        color: #fff;
        padding: 15px;
        margin: 20px 0;
        border-radius: 8px;
        text-align: center;
    }
</style>
</head>

<body>
    <div class="container">
        <h2>Appraisal Cycle Table</h2>
        <table>
            <thead>
                <tr>
                    <th>Appraisal ID</th>
                    <th>Name</th>
                  
                    <th>Start Date</th>
                    <th>End Date</th>
                    <th>Status</th>
                    <th>Edit</th>
                </tr>
            </thead>
            <tbody id="appraisal-table-body">
                <% appraisals.forEach((appraisal, index) => { %>
                    <tr>
                        <td><%= index + 1 %></td>
                        <td><%= appraisal.appraisal_cycle_name %></td>
                  
                        <td><%= new Date(appraisal.start_date).toLocaleDateString('en-GB', { day: '2-digit', month: '2-digit', year: '2-digit' }) || 'N/A' %></td>
                        <td><%= new Date(appraisal.end_date).toLocaleDateString('en-GB', { day: '2-digit', month: '2-digit', year: '2-digit' }) || 'N/A' %></td>
                        <td><%= appraisal.status %></td></td>
                        
                        <td>
                            <button class="edit-button" onclick="openEditModal('<%= appraisal.appraisal_id %>', '<%= appraisal.appraisal_cycle_name %>', '<%= appraisal.start_date %>', '<%= appraisal.end_date %>')">Edit</button>
                        </td>
                    </tr>
                <% }) %>
            </tbody>
        </table>
    </div>
    <!-- Edit Modal -->
    <div class="modal" id="edit-modal">
        <div class="modal-content">
            <div class="modal-header">Edit Appraisal Cycle</div>
            <div class="modal-body">
                <label for="edit-name">Name:</label>
                <input type="text" id="edit-name">
                <label for="edit-end-date">End Date:</label>
                <input type="date" id="edit-end-date">
            </div>
            <div class="modal-buttons">
                <button class="save-button" onclick="saveChanges()">Save</button>
                <button class="cancel-button" onclick="closeEditModal()">Cancel</button>
            </div>
        </div>
    </div>

    <script>
        // let currentEditingId = null;

        function openEditModal(id, name, endDate) {
            currentEditingId = id;
            document.getElementById('edit-name').value = name;
            document.getElementById('edit-end-date').value = endDate;
            document.getElementById('edit-modal').style.display = 'flex';
        }

        function closeEditModal() {
            document.getElementById('edit-modal').style.display = 'none';
        }

        function saveChanges() {
            const name = document.getElementById('edit-name').value;
            const endDate = document.getElementById('edit-end-date').value;

            const tableBody = document.getElementById('appraisal-table-body');
            const rows = tableBody.getElementsByTagName('tr');
            for (let i = 0; i < rows.length; i++) {
                const cells = rows[i].getElementsByTagName('td');
                if (cells[0].innerText == currentEditingId) {
                    cells[1].innerText = name;
                    cells[3].innerText = endDate;
                    break;
                }
            }

            closeEditModal();
        }

        function toggleStatus(button) {
            if (button.classList.contains('active')) {
                button.classList.remove('active');
                button.classList.add('inactive');
                button.innerText = 'Inactive';
            } else {
                button.classList.remove('inactive');
                button.classList.add('active');
                button.innerText = 'Active';
            }
        }
        let currentEditingId = null;

function openEditModal(id, name, endDate) {
    currentEditingId = id;
    document.getElementById('edit-name').value = name;  // We keep this to show the name, but we won't allow editing.
    document.getElementById('edit-name').disabled = true;  // Disable editing for name.
    document.getElementById('edit-end-date').value = endDate;
    document.getElementById('edit-modal').style.display = 'flex';
}

function closeEditModal() {
    document.getElementById('edit-modal').style.display = 'none';
}

function saveChanges() {
    const endDate = document.getElementById('edit-end-date').value;

    // Update only the End Date for the selected appraisal ID.
    const tableBody = document.getElementById('appraisal-table-body');
    const rows = tableBody.getElementsByTagName('tr');
    for (let i = 0; i < rows.length; i++) {
        const cells = rows[i].getElementsByTagName('td');
        if (cells[0].innerText == currentEditingId) {
            cells[3].innerText = endDate;  // Only update the End Date.
            break;
        }
    }

    closeEditModal();
}

function toggleStatus(button) {
    if (button.classList.contains('active')) {
        button.classList.remove('active');
        button.classList.add('inactive');
        button.innerText = 'Inactive';
    } else {
        button.classList.remove('inactive');
        button.classList.add('active');
        button.innerText = 'Active';
    }
}
    </script>
</body>

</html>
